# CONFIGURASI FIGHTERTUNNEL LOADBALANCER [ jamm.topplug7.store ]
# Restored to original working configuration
global
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 1d
    maxconn 100000
    tune.bufsize 32768
    tune.maxrewrite 2048
    nbthread 4
    cpu-map 1 0
    cpu-map 2 1
    cpu-map 3 2
    cpu-map 4 3
    tune.idletimer 1000
    tune.ssl.default-dh-param 2048
    maxcompcpuusage 80
    maxcomprate 200
    ulimit-n 500000
    pidfile /run/haproxy.pid
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

defaults
    log global
    mode tcp
    option dontlognull
    option tcplog
    timeout connect 5s
    timeout client 4h
    timeout server 4h
    timeout tunnel 4h
    timeout http-request 30s
    option http-keep-alive
    retries 3

# Frontend for multiport
frontend multiport
    mode tcp
    bind *:230-1000 tfo
    maxconn 75000
    tcp-request inspect-delay 3s
    tcp-request content accept if HTTP
    tcp-request content accept if { req.ssl_hello_type 1 }
    use_backend recir_http if HTTP
    default_backend recir_https

# Frontend for HTTP abstract socket
frontend http_abstract
    mode tcp
    maxconn 50000
    bind abns@haproxy-http accept-proxy tfo
    default_backend recir_https_www

# Frontend for HTTPS abstract socket
frontend https_abstract
    mode tcp
    maxconn 75000
    bind abns@haproxy-https accept-proxy ssl crt /etc/haproxy/hap.pem alpn h2,http/1.1 tfo
    tcp-request inspect-delay 3s
    tcp-request content capture req.ssl_sni len 100
    tcp-request content accept if { req.ssl_hello_type 1 }

    acl this_payload payload(0,7) -m bin 5353482d322e30
    acl up-to ssl_fc_alpn -i h2

    use_backend GRUP_FTVPN if up-to
    use_backend FTVPN if { path_reg -i ^\/(.*) }
    use_backend BOT_FTVPN if this_payload
    default_backend CHANNEL_FTVPN

# Frontend for SSL traffic
frontend ssl
    mode tcp
    maxconn 75000
    bind *:443 ssl crt /etc/haproxy/hap.pem alpn h2,http/1.1 tfo

    tcp-request inspect-delay 3s
    tcp-request content capture req.ssl_sni len 100
    tcp-request content accept if { req.ssl_hello_type 1 }

    acl this_payload payload(0,7) -m bin 5353482d322e30
    acl up-to ssl_fc_alpn -i h2

    use_backend GRUP_FTVPN if up-to
    use_backend FTVPN if { path_reg -i ^\/(.*) }
    use_backend BOT_FTVPN if this_payload
    default_backend CHANNEL_FTVPN

# Backends
backend recir_https_www
    mode tcp
    server misssv-bau 127.0.0.1:229 check

backend FTVPN
    mode tcp
    server hencet-bau 127.0.0.1:1010 send-proxy check

backend GRUP_FTVPN
    mode tcp
    server hencet-baus 127.0.0.1:1013 send-proxy check

backend CHANNEL_FTVPN
    mode tcp
    balance leastconn
    server memek-bau 127.0.0.1:1012 send-proxy check

backend BOT_FTVPN
    mode tcp
    server misv-bau 127.0.0.1:224 check

backend recir_http
    mode tcp
    server loopback-for-http abns@haproxy-http send-proxy-v2 check

backend recir_https
    mode tcp
    server loopback-for-https abns@haproxy-https send-proxy-v2 check

# Stats frontend for monitoring
listen stats
    mode http
    bind *:1936
    stats enable
    stats uri /haproxy?stats
    stats refresh 10s
    stats admin if TRUE
    stats show-legends
    stats show-node
